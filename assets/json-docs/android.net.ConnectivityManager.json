{
  "methods": {
    "addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "l"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "name": "addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)"
    },
    "addNetwork(android.net.Network,android.net.NetworkInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "network",
        "networkInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addNetwork(android.net.Network,android.net.NetworkInfo)",
      "documentation": "Adds new {@code network} to the list of all {@link android.net.Network}s.\n\n@param network The network.\n@param networkInfo The network info paired with the {@link android.net.Network}.\n"
    },
    "bindProcessToNetwork(android.net.Network)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "network"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "bindProcessToNetwork(android.net.Network)"
    },
    "clearAllNetworks()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearAllNetworks()",
      "documentation": "Clears the list of all {@link android.net.Network}s.\n"
    },
    "getActiveNetwork()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.net.Network",
      "exceptions": [],
      "minSdk": 23,
      "name": "getActiveNetwork()",
      "documentation": "@see #setActiveNetworkInfo(NetworkInfo)\n@see #setNetworkInfo(int, NetworkInfo)\n"
    },
    "getActiveNetworkInfo()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.net.NetworkInfo",
      "exceptions": [],
      "name": "getActiveNetworkInfo()"
    },
    "getAllNetworkInfo()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.net.NetworkInfo[]",
      "exceptions": [],
      "name": "getAllNetworkInfo()",
      "documentation": "@see #setActiveNetworkInfo(NetworkInfo)\n@see #setNetworkInfo(int, NetworkInfo)\n"
    },
    "getAllNetworks()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.net.Network[]",
      "exceptions": [],
      "minSdk": 21,
      "name": "getAllNetworks()"
    },
    "getBackgroundDataSetting()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "getBackgroundDataSetting()"
    },
    "getBoundNetworkForProcess()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.net.Network",
      "exceptions": [],
      "minSdk": 23,
      "name": "getBoundNetworkForProcess()"
    },
    "getNetworkCallbacks()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.Set\u003candroid.net.ConnectivityManager.NetworkCallback\u003e",
      "exceptions": [],
      "name": "getNetworkCallbacks()"
    },
    "getNetworkInfo(android.net.Network)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "network"
      ],
      "returnType": "android.net.NetworkInfo",
      "exceptions": [],
      "minSdk": 21,
      "name": "getNetworkInfo(android.net.Network)"
    },
    "getNetworkInfo(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkType"
      ],
      "returnType": "android.net.NetworkInfo",
      "exceptions": [],
      "name": "getNetworkInfo(int)"
    },
    "getNetworkPreference()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getNetworkPreference()"
    },
    "isActiveNetworkMetered()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isActiveNetworkMetered()",
      "documentation": "Counts {@link ConnectivityManager#TYPE_MOBILE} networks as metered.\nOther types will be considered unmetered.\n\n@return `true` if the active network is metered, otherwise `false`.\n@see #setActiveNetworkInfo(NetworkInfo)\n@see #setDefaultNetworkActive(boolean)\n"
    },
    "isDefaultNetworkActive()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "name": "isDefaultNetworkActive()",
      "documentation": "@return `true` by default, or the value specifed via {@link #setDefaultNetworkActive(boolean)}\n@see #setDefaultNetworkActive(boolean)\n"
    },
    "registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "request",
        "networkCallback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "name": "registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)"
    },
    "removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "l"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "name": "removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)"
    },
    "removeNetwork(android.net.Network)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "network"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "removeNetwork(android.net.Network)",
      "documentation": "Removes the {@code network} from the list of all {@link android.net.Network}s.\n@param network The network.\n"
    },
    "setActiveNetworkInfo(android.net.NetworkInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "info"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setActiveNetworkInfo(android.net.NetworkInfo)"
    },
    "setBackgroundDataSetting(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "b"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setBackgroundDataSetting(boolean)"
    },
    "setDefaultNetworkActive(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isActive"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDefaultNetworkActive(boolean)",
      "documentation": "Sets the active state of the default network.\n\nBy default this is true and affects the result of {@link\nConnectivityManager#isActiveNetworkMetered()}, {@link\nConnectivityManager#isDefaultNetworkActive()}, {@link ConnectivityManager#getActiveNetwork()}\nand {@link ConnectivityManager#getAllNetworkInfo()}.\n\nCalling this method with {@code true} after any listeners have been registered with {@link\nConnectivityManager#addDefaultNetworkActiveListener(OnNetworkActiveListener)} will result in\nthose listeners being fired.\n\n@param isActive The active state of the default network.\n"
    },
    "setNetworkInfo(int,android.net.NetworkInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkType",
        "networkInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setNetworkInfo(int,android.net.NetworkInfo)"
    },
    "setNetworkPreference(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "preference"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setNetworkPreference(int)"
    },
    "unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkCallback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "name": "unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.M",
    "org.robolectric.RuntimeEnvironment.getApiLevel",
    "android.net.ConnectivityManager",
    "android.net.ConnectivityManager.OnNetworkActiveListener",
    "android.net.Network",
    "android.net.NetworkInfo",
    "android.net.NetworkRequest",
    "java.util.HashMap",
    "java.util.HashSet",
    "java.util.Map",
    "java.util.Set",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.shadow.api.Shadow"
  ],
  "name": "org.robolectric.shadows.ShadowConnectivityManager"
}