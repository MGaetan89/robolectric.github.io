{
  "methods": {
    "getHead()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "abstract"
      ],
      "params": [],
      "returnType": "android.os.Message",
      "exceptions": [],
      "name": "getHead()",
      "documentation": "Retrieves the current Message at the top of the queue.\n\n\u003cp\u003eOnly supported in {@link LooperMode.Mode.LEGACY}.\n"
    },
    "getScheduler()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "abstract"
      ],
      "params": [],
      "returnType": "org.robolectric.util.Scheduler",
      "exceptions": [],
      "name": "getScheduler()",
      "documentation": "Return this queue\u0027s Scheduler.\n\n\u003cp\u003eOnly supported in {@link LooperMode.Mode.LEGACY}.\n"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "abstract"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()",
      "documentation": "Reset the messageQueue state. Should not be called by tests - it intended for use by the\nRobolectric framework.\n"
    },
    "setHead(android.os.Message)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "abstract"
      ],
      "params": [
        "msg"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHead(android.os.Message)",
      "documentation": "Sets the current Message at the top of the queue.\n\n\u003cp\u003eOnly supported in {@link LooperMode.Mode.LEGACY}.\n"
    },
    "setScheduler(org.robolectric.util.Scheduler)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "abstract"
      ],
      "params": [
        "scheduler"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setScheduler(org.robolectric.util.Scheduler)",
      "documentation": "Set this queue\u0027s Scheduler.\n\n\u003cp\u003eOnly supported in {@link LooperMode.Mode.LEGACY}.\n"
    }
  },
  "imports": [
    "android.os.Message",
    "android.os.MessageQueue",
    "org.robolectric.annotation.Implements",
    "org.robolectric.util.Scheduler",
    "org.robolectric.shadows.ShadowMessageQueue.Picker"
  ],
  "name": "org.robolectric.shadows.ShadowMessageQueue",
  "documentation": "The shadow API for {@link MessageQueue}.\n\n\u003cp\u003eDifferent shadow implementations will be used depending on the current {@link LooperMode}. See\n{@link ShadowLegacyMessageQueue} and {@link ShadowPausedMessageQueue} for details.\n"
}