{
  "methods": {
    "getAlpha()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getAlpha()"
    },
    "getCameraDistance()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getCameraDistance()"
    },
    "getClipToOutline()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "getClipToOutline()"
    },
    "getElevation()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getElevation()"
    },
    "getPivotX()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getPivotX()"
    },
    "getPivotY()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getPivotY()"
    },
    "getRotation()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getRotation()"
    },
    "getRotationX()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getRotationX()"
    },
    "getRotationY()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getRotationY()"
    },
    "getScaleX()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getScaleX()"
    },
    "getScaleY()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getScaleY()"
    },
    "getTranslationX()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getTranslationX()"
    },
    "getTranslationY()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getTranslationY()"
    },
    "getTranslationZ()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getTranslationZ()"
    },
    "hasOverlappingRendering()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "hasOverlappingRendering()"
    },
    "isPivotExplicitlySet()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isPivotExplicitlySet()"
    },
    "isValid()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isValid()"
    },
    "nSetLayerPaint(long,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "renderNode",
        "paint"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "nSetLayerPaint(long,long)",
      "documentation": "Implementation of native method nSetLayerPaint\n\n@param renderNode Ignored\n@param paint Ignored\n@return Always true\n"
    },
    "nSetLayerType(long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "renderNode",
        "layerType"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "nSetLayerType(long,int)",
      "documentation": "Implementation of native method nSetLayerType\n\n@param renderNode Ignored\n@param layerType Ignored\n@return Always true\n"
    },
    "setAlpha(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "alpha"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setAlpha(float)"
    },
    "setCameraDistance(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "cameraDistance"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setCameraDistance(float)"
    },
    "setClipToOutline(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "clipToOutline"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setClipToOutline(boolean)"
    },
    "setElevation(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "lift"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setElevation(float)"
    },
    "setHasOverlappingRendering(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "overlappingRendering"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setHasOverlappingRendering(boolean)"
    },
    "setPivotX(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "pivotX"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setPivotX(float)"
    },
    "setPivotY(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "pivotY"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setPivotY(float)"
    },
    "setRotation(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "rotation"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setRotation(float)"
    },
    "setRotationX(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "rotationX"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setRotationX(float)"
    },
    "setRotationY(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "rotationY"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setRotationY(float)"
    },
    "setScaleX(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "scaleX"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setScaleX(float)"
    },
    "setScaleY(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "scaleY"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setScaleY(float)"
    },
    "setTranslationX(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "translationX"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setTranslationX(float)"
    },
    "setTranslationY(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "translationY"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setTranslationY(float)"
    },
    "setTranslationZ(float)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "translationZ"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "setTranslationZ(float)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.P",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements"
  ],
  "name": "org.robolectric.shadows.ShadowRenderNode"
}