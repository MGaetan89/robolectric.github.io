{
  "methods": {
    "cancel(android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "cancel(android.app.PendingIntent)"
    },
    "getNextAlarmClock()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.app.AlarmManager.AlarmClockInfo",
      "exceptions": [],
      "minSdk": 21,
      "name": "getNextAlarmClock()"
    },
    "getNextScheduledAlarm()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowAlarmManager.ScheduledAlarm",
      "exceptions": [],
      "name": "getNextScheduledAlarm()",
      "documentation": "@return the next scheduled alarm after consuming it\n"
    },
    "getScheduledAlarms()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003corg.robolectric.shadows.ShadowAlarmManager.ScheduledAlarm\u003e",
      "exceptions": [],
      "name": "getScheduledAlarms()",
      "documentation": "@return all scheduled alarms\n"
    },
    "internalSet(int,long,long,android.app.PendingIntent,android.app.PendingIntent)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "type",
        "triggerAtTime",
        "interval",
        "operation",
        "showIntent"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "internalSet(int,long,long,android.app.PendingIntent,android.app.PendingIntent)"
    },
    "peekNextScheduledAlarm()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowAlarmManager.ScheduledAlarm",
      "exceptions": [],
      "name": "peekNextScheduledAlarm()",
      "documentation": "@return the most recently scheduled alarm without consuming it\n"
    },
    "set(int,long,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "type",
        "triggerAtTime",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "set(int,long,android.app.PendingIntent)"
    },
    "setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "info",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "name": "setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)"
    },
    "setAndAllowWhileIdle(int,long,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "type",
        "triggerAtTime",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 23,
      "name": "setAndAllowWhileIdle(int,long,android.app.PendingIntent)"
    },
    "setExact(int,long,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "type",
        "triggerAtTime",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 19,
      "name": "setExact(int,long,android.app.PendingIntent)"
    },
    "setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "type",
        "triggerAtTime",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 23,
      "name": "setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)"
    },
    "setInexactRepeating(int,long,long,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "type",
        "triggerAtMillis",
        "intervalMillis",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setInexactRepeating(int,long,long,android.app.PendingIntent)"
    },
    "setRepeating(int,long,long,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "type",
        "triggerAtTime",
        "interval",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRepeating(int,long,long,android.app.PendingIntent)"
    },
    "setWindow(int,long,long,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "type",
        "windowStartMillis",
        "windowLengthMillis",
        "operation"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 19,
      "name": "setWindow(int,long,long,android.app.PendingIntent)"
    }
  },
  "imports": [
    "android.app.AlarmManager.RTC_WAKEUP",
    "android.os.Build.VERSION_CODES.KITKAT",
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.M",
    "android.annotation.TargetApi",
    "android.app.AlarmManager",
    "android.app.AlarmManager.AlarmClockInfo",
    "android.app.PendingIntent",
    "android.content.Intent",
    "java.util.ArrayList",
    "java.util.Collections",
    "java.util.List",
    "org.robolectric.Shadows",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.shadows.ShadowAlarmManager.ScheduledAlarm"
  ],
  "name": "org.robolectric.shadows.ShadowAlarmManager"
}